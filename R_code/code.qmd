---
title: "Analysis of Correlated Data (CHL5222H) FInal Project"
subtitle: "Beating the Blues"
author: Meagan Lacroix
format: pdf
---

```{r setup, include=FALSE}
library(here)
library(tidyverse)
library(tinytex)
library(knitr)
library(kableExtra)
library(nlme)
library(texreg)
library(AICcmodavg)

knitr::opts_knit$set(root.dir = here())
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
theme_set(theme_bw(base_size = 15)) # Use black/white theme and increase font size for all ggplot figures
```

```{r}
btb <- read.table(here("data", "btheb.txt"), header = TRUE)
```

```{r}
names(btb)
head(btb)
tail(btb)
```

```{r}
#add participant ID
btb <- btb %>%
  mutate(id = row_number()) %>%
  select(id, everything())
```

```{r}
#make drug, length, and treatment as factors
btb <- btb %>%
  mutate(
    drug = factor(drug, levels = c("No", "Yes")),  # Set reference level
    length = factor(length, levels = c("<6m", ">6m")),  # Set reference level
    treatment = factor(treatment, levels = c("TAU", "BtheB"))  # Set TAU as reference
  )
```

```{r}
str(btb)  # Check structure
table(btb$drug)  # See counts for each category
table(btb$treatment)
```

```{r}
#make data set long
btb.long <- btb %>%
pivot_longer(cols = c("bdi.pre","bdi.2m", "bdi.4m", "bdi.6m", "bdi.8m"),
names_to = "visit",
values_to = "score")%>%
  mutate(
    occasion = case_when(
      visit == "bdi.pre" ~ 0,
      visit == "bdi.2m"  ~ 1,
      visit == "bdi.4m"  ~ 2,
      visit == "bdi.6m"  ~ 3,
      visit == "bdi.8m"  ~ 4))
```

```{r}
#make summary table for plotting
btb_summary <- btb.long %>%
  group_by(occasion, treatment, drug, length) %>%
  summarise(
    mean_bdi = mean(score, na.rm = TRUE),
    sd_bdi = sd(score, na.rm = TRUE),  
    lower_ci = mean_bdi - 1.96 * sd_bdi,  
    upper_ci = mean_bdi + 1.96 * sd_bdi   
  ) %>%
  ungroup()
```

```{r}

ggplot(btb_summary, aes(x = occasion, y = mean_bdi, color = treatment, group = treatment)) +
  geom_line(size = 1) +    # Line plot for mean BDI over time
  geom_point(size = 2) +   # Add points for means
  geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci), width = 0.2) + # Add 95% CI
  facet_grid(drug ~ length) +  # Panel by drug and length groups
  labs(title = "Mean BDI Score Over Time by Treatment",
       x = "Time (Occasion)", y = "Mean BDI Score",
       color = "Treatment Group") +
  theme_minimal() +
  theme(strip.text = element_text(size = 12, face = "bold"))+
  ylim(0, 60) +
  theme(plot.title = element_text(hjust = 0.5))

```

```{r}
#create histogram of the distribution of scores

ggplot(btb, aes(x = bdi.pre)) +
  geom_histogram(binwidth = 5, fill = "steelblue", color = "black", alpha = 0.7) +
  labs(title = "Distribution of BDI Scores Pre-Intervention", x = "BDI Score", y = "Count") +
  theme_minimal() + 
  theme(plot.title = element_text(hjust = 0.5))

```

```{r}
ggplot(btb, aes(x = bdi.pre)) +
  geom_histogram(binwidth = 5, fill = "steelblue", color = "black", alpha = 0.7) +
  labs(title = "Distribution of BDI Scores Pre-Intervention", x = "BDI Score", y = "Count") +
  theme_minimal() + 
  facet_wrap(~ treatment) +
  theme(plot.title = element_text(hjust = 0.5))
```

```{r}
btb_plot_summary <- btb.long %>%
  group_by(occasion, treatment) %>%
  summarise(mean_score = mean(score, na.rm = TRUE), .groups = "drop")

# Create the plot with trend line for mean values
ggplot(btb.long, aes(x = occasion, y = score, color = treatment)) +
  geom_point(alpha = 0.5) +  # Show individual data points
  geom_line(data = btb_plot_summary, aes(x = occasion, y = mean_score, color = treatment, group = treatment), size = 1.2) +  # Line for mean trend
  labs(title = "BDI Score Trends Over Time", x = "Occasion", y = "BDI Score",
       color = "Treatment") +
  scale_x_continuous(breaks = c(0, 1, 2, 3, 4),  # Specify breaks
                     labels = c("Baseline", "Month 2", "Month 4", "Month 6", "Month 8")) + 
  theme_minimal() +
  ylim(0, 60) +
  theme(plot.title = element_text(hjust = 0.5))
```

```{r}
# Summarize counts for Table 1
summary_table <- btb %>%
  group_by(drug, length, treatment) %>%
  summarise(Count = n(), .groups = "drop") %>%
  pivot_wider(names_from = treatment, values_from = Count, values_fill = 0) %>%
  rename("Treatment as Usual" = `TAU`, "Beat the Blues" = `BtheB`) %>%
  mutate(Total = `Treatment as Usual` + `Beat the Blues`) %>%
  rename(Drug = drug, Length = length)

# Compute total row
total_row <- summary_table %>%
  summarise(across(where(is.numeric), sum)) %>%
  mutate(Drug = "Total", Length = "")

# Combine with total row
summary_table <- bind_rows(summary_table, total_row)
```

```{r}
summary_table %>%
  kable(format = "html", caption = "<p style='text-align:center; font-weight:bold;'>Table 1. Number of Participants per Treatment Group</p>", align = "c") %>%
  kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover")) %>%
  add_header_above(c(" " = 2, "Treatment Group" = 3)) 
```

```{r}
btb_summary2 <- btb.long %>%
  group_by(treatment, occasion) %>%
  summarise(
    mean_bdi = mean(score, na.rm = TRUE),
    sd_bdi = sd(score, na.rm = TRUE)
  ) %>%
  mutate(occasion = case_when(
    occasion == 0 ~ "Baseline",
    occasion == 1 ~ "Month 2",
    occasion == 2 ~ "Month 4",
    occasion == 3 ~ "Month 6",
    occasion == 4 ~ "Month 8"
  )) %>%
  ungroup()
```

```{r}

# Pivot data to wide format
summary2_wide <- btb_summary2 %>%
  pivot_wider(names_from = treatment, values_from = c(mean_bdi, sd_bdi)
  )
#Reorder columns
summary2_wide <- summary2_wide %>%
  select(occasion, `mean_bdi_TAU`, `sd_bdi_TAU`, `mean_bdi_BtheB`, `sd_bdi_BtheB`)


colnames(summary2_wide) <- c("Occasion", "Mean", "SD", "Mean", "SD")


summary2_wide %>%
  kable(format = "html", caption = "<p style='text-align:center; font-weight:bold;'>Mean BDI Scores Over Time by Treatment Group</p>", align = "c") %>%
  kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover")) %>%
  add_header_above(c(" " = 1, "Treatment as Usual" = 2, "Beat the Blues" = 2))

```

```{r}

ggplot(btb_summary2, aes(x = occasion, y = mean_bdi, color = treatment, group = treatment)) +
  geom_line(size = 1) +    # Line plot for mean BDI over time
  geom_point(size = 2) +   # Add points for means
  geom_errorbar(aes(ymin = mean_bdi - sd_bdi, ymax = mean_bdi + sd_bdi), width = 0.2) + # Add 95% CI
  labs(title = "Mean BDI Score Over Time by Treatment",
       x = "Occasion", y = "Mean BDI Score",
       color = "Treatment Group") +
  theme_minimal() +
  theme(strip.text = element_text(size = 12, face = "bold"))+
  ylim(0, 60) +
  theme(plot.title = element_text(hjust = 0.5))
```

```{r}
#summarizing number of observations at each occasion
measurement_counts <- btb.long %>%
  group_by(occasion) %>%
  summarise(n = sum(!is.na(score)))

measurement_counts
```

```{r}
measurement_counts2 <- btb.long %>%
  group_by(treatment, occasion) %>%
  summarise(n = sum(is.na(score)), .groups = "drop")

measurement_counts2_wide <- measurement_counts2 %>%
  pivot_wider(names_from = treatment, values_from = n) %>%
  mutate(Total = TAU + BtheB)

measurement_counts2_wide
```

Methods

```{r}
##compare mean models to find best out of that
#looks like there is a treatment difference
#looks like they are parallel 
#looks like small time trend, especially at beginning of trial, then it smooths out
#most likely linear but will check quadratic time trend

#don't need to include treatment bc it is a randomized trial
#24% of data is missing - assume MAR, use multiple imputation
library(mice)
sapply(btb.long, function(x) sum(is.na(x)))

btb %>%
  dplyr::select(-id, -drug, -length, -treatment) %>%
  md.pattern()

# missing data is monotone, arising from dropout, use likelihood methods like in class

#initialize mice to get predictor matrix
init=mice(btb.long, max=0, print=FALSE)
pred=init$predictorMatrix

#remove unwanted variables from predictor matrix
pred[, "drug"] = 0
pred[, "length"] = 0
pred[, "treatment"] = 0
pred[, "visit"] = 0
pred[, "occasion"] = 0

#restrict variable with NAs from being imputed 
meth=init$method
meth[c("score")]="norm" 

imputed = mice(btb.long, method=meth, predictorMatrix=pred, m=5)

imp <- complete(imputed)
head(imp)

##compare mean models

#1)linear model
btb.long$occasion <- as.numeric(as.factor(btb.long$occasion))

mean.mod1 <- gls(score ~ drug + length + occasion +  treatment:occasion,  corr=corSymm(form= ~ occasion | id), weights = varIdent(form = ~ 1 | occasion), na.action = na.omit, data = btb.long)

#2) quadratic model
btb.long <- btb.long %>%
  mutate(occasionc = occasion - mean(occasion), 
         occasion2 = occasionc^2)

mean.mod2 <- gls(score ~ occasionc+ drug + length + treatment:occasionc + treatment:occasion2, corr=corSymm(form= ~ occasion | id), weights = varIdent(form = ~ 1 | occasion), na.action = na.omit, data = btb.long)

summary(mean.mod2)

#3) model with no interaction
mean.mod3 <- gls(score ~ occasion + length + drug, corr=corSymm(form= ~ occasion | id), weights = varIdent(form = ~ 1 | occasion), na.action = na.omit, data = btb.long)

#4) spline at month = 2
btb.long <- btb.long %>%
  mutate(month = ifelse(occasion ==1,0,
                        ifelse(occasion ==2,2,
                            ifelse(occasion==3,4,
                               ifelse(occasion==4,6,NA)))),
    knot = ifelse(month - 2 < 0, 0, month - 2))

spline.mod1 <- gls(score ~ drug + length + occasion + knot +  treatment:occasion + treatment:knot,  corr=corSymm(form= ~ occasion | id), weights = varIdent(form = ~ 1 | occasion), na.action = na.omit, data = btb.long)


## compare mean models using lrt since they are nested
# refit models with ML
mean.mod1.ml <- gls(score ~ drug + length + occasion +  treatment:occasion,  corr=corSymm(form= ~ occasion | id), weights = varIdent(form = ~ 1 | occasion), na.action = na.omit, method = "ML", data = btb.long)

mean.mod2.ml <- gls(score ~ occasionc + drug + length + treatment:occasionc + treatment:occasion2, corr=corSymm(form= ~ occasion | id), weights = varIdent(form = ~ 1 | occasion), na.action = na.omit, method = "ML", data = btb.long)

mean.mod3.ml <- gls(score ~ occasion + length + drug, corr=corSymm(form= ~ occasion | id), weights = varIdent(form = ~ 1 | occasion), na.action = na.omit, method="ML", data = btb.long)

spline.mod1.ml <- gls(score ~ drug + length + occasion + knot +  treatment:occasion + treatment:knot,  corr=corSymm(form= ~ occasion | id), weights = varIdent(form = ~ 1 | occasion), na.action = na.omit, method = "ML", data = btb.long)

anova(mean.mod1.ml, mean.mod2.ml)
# p value is 0.0284 so we reject the null and say the quadratic is better 

anova(mean.mod1.ml, mean.mod3.ml)
#pvalue is 0.24 so we do not reject the null and accept model 3

anova(mean.mod2.ml, mean.mod3.ml)

mean.mod1.ml <- gls(score ~ drug + length + occasion +  treatment:occasion,  corr=corSymm(form= ~ occasion | id), weights = varIdent(form = ~ 1 | occasion), na.action = na.omit, , method = "ML", data = btb.long)

##compare mean model to random intercept model
rim1 <- lme(score ~ occasion + drug + length, random = ~ 1 | id, data = btb.long, na.action = na.omit)




##compare different variance structures

##AR1
mean.mod3.ml.ar1 <- gls(score ~ occasion + length + drug, corr=corAR1(form= ~ occasion | id), weights = varIdent(form = ~ 1 | occasion), na.action = na.omit, method="ML", data = btb.long)

##Compound Symmetry
mean.mod3.ml.cs <- gls(score ~ occasion + length + drug, corr=corCompSymm(form= ~ occasion | id), weights = varIdent(form = ~ 1 | occasion), na.action = na.omit, method="ML", data = btb.long)

##compare AIC, BIC, LogLik
compare = data.frame(
  AIC = c(AIC(mean.mod3.ml), AIC(mean.mod3.ml.ar1), AIC(mean.mod3.ml.cs)),
  BIC = c(BIC(mean.mod3.ml), BIC(mean.mod3.ml.ar1), BIC(mean.mod3.ml.cs)),
  LogLik = c(logLik(mean.mod3.ml), logLik(mean.mod3.ml.ar1), logLik(mean.mod3.ml.cs))
)
compare
# mean.mod3.ml has the smallest AIC 2675.3266
# mean.mod3.ml.ar1 has the smallest BIC 2729.718
# mean.mod3.ml has the biggest LogLik -1318.683
```
